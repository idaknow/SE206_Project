package GUI;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;

import javax.swing.filechooser.FileFilter;

import functionality.AddingAudio;
import functionality.SaveProjFiles;

import javax.swing.JFileChooser;

// BY IDA DE SMET
public class MediaSelection extends JPanel implements ActionListener {
	/**
	 * Initialized variables required
	 */
	private static final long serialVersionUID = 1L;
	private JButton mp3, festival, editFestival;
	protected JFrame frame;
	protected boolean isvideo;
	private JFileChooser chooser;
	private String choosertitle;
	protected boolean close = false;
	protected String videoFile, musicFile;
	protected boolean isMSOpen = false;
	protected JFrame psmp3 = new JFrame();
	protected JPanel pscontentPane;
	private FileFilter filter;
	private boolean isEdit;

	/**
	 * This constructor adds buttons onto a new frame's Panel, if it's mp3
	 */
	public MediaSelection(boolean video) {
		isvideo = video;
		if (!video){ // checks that the input is a video
			//__________________________________________________________________________ MP3 BUTTON
			mp3 = new JButton("Add mp3");
			mp3.setFont(new Font("Tahoma", Font.BOLD, 16));
			mp3.setForeground(Color.WHITE);
			mp3.setBackground(Color.BLACK);
			mp3.addActionListener(this);
			add(mp3);

			//__________________________________________________________________________ FESTIVAL BUTTON
			festival = new JButton("Add commentary mp3");
			festival.setFont(new Font("Tahoma", Font.BOLD, 16));
			festival.setForeground(Color.WHITE);
			festival.setBackground(Color.BLACK);
			festival.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					CommentaryAdd.getWindows();
					CommentaryAdd.start(false);
				}});
			add(festival);

			//__________________________________________________________________________ MP3 BUTTON
			editFestival = new JButton("Edit commentary mp3 file");
			editFestival.setFont(new Font("Tahoma", Font.BOLD, 16));
			editFestival.setForeground(Color.WHITE);
			editFestival.setBackground(Color.BLACK);
			editFestival.addActionListener(this);
			add(festival);
			add(editFestival);
		}
		this.setBackground(Color.BLACK);
	}

	//__________________________________________________________________________________ MP3 BUTTON FUNCTIONALITY POP UP
	/*
	 * actionPerformed for creating the JFileChooser
	 * changes according to whether the FileChooser is the video or audio
	 */
	public void actionPerformed(ActionEvent e) {
		isEdit = false;
		if (e.getSource() == editFestival){
			isEdit = true;
		}
		chooser = new JFileChooser(); 
		chooser.setCurrentDirectory(new File(System.getProperty("user.home")+"/VIDIVOX"));
		chooser.setDialogTitle(choosertitle);

		//adding filter to the file chooser
		filter = fileChoseFilter.getFilterType(isvideo, isEdit);

		chooser.setFileFilter(filter); // sets filter according to if it's a video/ audio
		chooser.setAcceptAllFileFilterUsed(false);

		if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
			if (isvideo){
				videoFile = chooser.getSelectedFile().getAbsolutePath(); // gets the chosen video file name
				boolean temp = true;
				if (Mainframe.getVideoSourcePath() != null){
					int response = JOptionPane.showConfirmDialog(run.main.getFrame(), "Do you want to save current project before opening the new project?");
					if (JOptionPane.YES_OPTION == response){
						try {
							Mainframe.p.SaveP();
						} catch (IOException e1) {
							e1.printStackTrace();
						}
						// say it's saved and opening new proj
						JOptionPane.showMessageDialog(this, "Old project saved, new project created & opened");
					}else if(JOptionPane.CANCEL_OPTION == response){
						temp = false;
					}
				}
				if (temp){
					Mainframe.setVideoSource(videoFile); // sets selected video from file chooser as main source
					Mainframe.changeVideo();
					Mainframe.p = new SaveProjFiles(videoFile,false);
					Mainframe.p.newProject();
					try {
						Mainframe.p.SaveP();
					} catch (IOException e1) {
						e1.printStackTrace();
					}
				} else {
					if (!isEdit){
						musicFile = chooser.getSelectedFile().getAbsolutePath();// gets the chosen audio file name
						Mainframe.setAudioSource(musicFile);// sets selected video from file chooser as main source
						//new SubmitMergeMp3Frame(); // goes into a pop up asking to submit the mp3
						AddingAudio a = new AddingAudio();
						a.addToList1(musicFile);
					} else {
						musicFile = chooser.getSelectedFile().getAbsolutePath();// gets the chosen audio file name
						Mainframe.setAudioSource(musicFile);// sets selected video from file chooser as main source
						CommentaryAdd.getWindows();
						CommentaryAdd.start(true);
					}
				}
			}
		}
	}


	/*
	 * (non-Javadoc)
	 * @see javax.swing.JComponent#getPreferredSize()
	 */
	public Dimension getPreferredSize(){ return new Dimension(200, 200); }

	/**
	 * This function starts the frame if it is a video
	 */
	//_____________________________________________________________________________________ START FUNCTION TO ACTIVATE THE CLASS
	public void start(boolean video ){
		isMSOpen = true;
		isvideo = video;
		if(!video){
			frame = new JFrame("");
			frame.setBounds(530, 170, 300,200);
			MediaSelection panel = new MediaSelection(video);
			frame.addWindowListener(
					new WindowAdapter() {
						public void windowClosing(WindowEvent e) {
							frame.setVisible(false);
							isMSOpen = false;
						}});
			frame.getContentPane().add(panel);
			frame.setSize(220,130);
			frame.setVisible(true);
		}
	}

	/**
	 * brings JFrame frame to the front
	 */
	public void BringToFront() {
		frame.setVisible(true);
	}
}
