//package GUI;
import java.awt.Canvas;
import java.awt.CardLayout;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.ActionEvent;

import javax.swing.ImageIcon;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
/*import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.player.MediaPlayer;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;*/
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

//import functionality.Rewind;
//import functionality.videoSliderBar;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.List;

import javax.swing.JTextPane;

import java.awt.Font;

import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JList;
import javax.swing.BoxLayout;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import com.jgoodies.forms.layout.FormSpecs;
import javax.swing.JProgressBar;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JTextField;
import javax.swing.SpringLayout;
import java.awt.CardLayout;
import net.miginfocom.swing.MigLayout;
import javax.swing.JScrollPane;

public class Mainframe extends JFrame {

	private JButton playbutton, pausebutton, ffdbutton, rwdbutton, mp3Selectbtn, videoSelectbtn, mutebutton;
	private JSlider volSlider;
	//private static EmbeddedMediaPlayer mp;
	static String video;
	private static String audio;
	protected static boolean ffd = false;
	protected static boolean rwd = true;
	protected int videoLength;
	final public ImageIcon rwd_Icon = new ImageIcon(getClass().getResource("/btnImages/rw.png"));
	final public ImageIcon ffd_Icon = new ImageIcon(getClass().getResource("/btnImages/ffd.png"));
	final public ImageIcon mute_Icon = new ImageIcon(getClass().getResource("/btnImages/mute.png"));
	final public ImageIcon play_Icon = new ImageIcon(getClass().getResource("/btnImages/play.png"));
	final public ImageIcon pause_Icon = new ImageIcon(getClass().getResource("/btnImages/pause.png"));
	final public ImageIcon vol_Icon = new ImageIcon(getClass().getResource("/btnImages/vol.png"));
	private JPanel panel;
	private JSlider videoSlider;
	//protected static videoSliderBar vsb;
	private boolean videoSliderStart = false;
	private JPanel rightEditPanel;
	private JPanel topAudioBtns;
	private JPanel bottomAudioBtns;
	private JLabel lblVideo;
	private JButton btnNewButton;
	private JScrollPane scrollPane;
	private JButton btnAddSelectedAudio;
	private JButton btnSeeAllAudio;
	private JPanel audioListPanel;
	private JList audioListChoose;
	private JList audioListCurrentAdded;
	private JButton btnRemove;
	private JLabel lblSelectedAudio;
	private JButton btnNewButton_1;
	//private JSlider videoSlider;
	private JPanel playBtnPanel;
	private JPanel sliderPanel;

	/**
	 * Initialize the contents of the frame.
	 */
	protected Mainframe(String[] args) {

		//Creates the main JFrame
		JFrame frame = new JFrame("mainAp");
		frame.setTitle("VIDIVOX : BY IDA");
		frame.setLocation(100,100);
		frame.setSize(1050,600);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);

		//creates main media player factory with canvas
		//MediaPlayerFactory mpf = new MediaPlayerFactory();
		Canvas c = new Canvas();
		c.setBackground(Color.black);
		c.setBounds(100,500,1050,500);
		//creates panel that you put the video(canvas & factory) on
		JPanel mediaPanel = new JPanel();
		mediaPanel.setLayout(new BorderLayout());
		mediaPanel.add(c,BorderLayout.WEST);
		mediaPanel.setBounds(100,50,1050,600);
		frame.getContentPane().add(mediaPanel, BorderLayout.CENTER);

		rightEditPanel = new JPanel();
		mediaPanel.add(rightEditPanel);
		rightEditPanel.setLayout(new BorderLayout(0, 0));

		rightEditPanel = new JPanel();
		mediaPanel.add(rightEditPanel);
		rightEditPanel.setLayout(new BorderLayout(0, 0));

		topAudioBtns = new JPanel();
		rightEditPanel.add(topAudioBtns, BorderLayout.NORTH);
		topAudioBtns.setLayout(new BorderLayout(0, 0));

		lblVideo = new JLabel("VIDEO: ___");
		topAudioBtns.add(lblVideo, BorderLayout.NORTH);

		btnNewButton = new JButton("OPEN/ CREATE/ EDIT AUDIO");
		btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 16));
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				/*getMp().pause();
				if (Mainframe.getVideoSource() == null){
					ChooseAudioTypeFrame newFrame = new ChooseAudioTypeFrame();
				} else if (!ms.isMSOpen){
					ms.start(false);
				} else if (ms.isMSOpen){
					ms.BringToFront();
				}*/
			}
		});
		topAudioBtns.add(btnNewButton, BorderLayout.SOUTH);

		bottomAudioBtns = new JPanel();
		rightEditPanel.add(bottomAudioBtns, BorderLayout.SOUTH);
		bottomAudioBtns.setLayout(new BorderLayout(0, 0));

		btnAddSelectedAudio = new JButton("Add audio");
		btnAddSelectedAudio.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		bottomAudioBtns.add(btnAddSelectedAudio, BorderLayout.WEST);

		btnRemove = new JButton("See all audio edits");
		btnRemove.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		bottomAudioBtns.add(btnRemove, BorderLayout.EAST);

		lblSelectedAudio = new JLabel("Selected audio: ___");
		bottomAudioBtns.add(lblSelectedAudio, BorderLayout.NORTH);

		btnNewButton_1 = new JButton("Remove audio");
		bottomAudioBtns.add(btnNewButton_1, BorderLayout.CENTER);

		scrollPane = new JScrollPane();
		rightEditPanel.add(scrollPane, BorderLayout.EAST);

		audioListPanel = new JPanel();
		rightEditPanel.add(audioListPanel, BorderLayout.CENTER);
		audioListPanel.setLayout(new CardLayout(0, 0));

		audioListChoose = new JList();
		audioListPanel.add(audioListChoose, "audio files to select from");

		audioListCurrentAdded = new JList();
		audioListPanel.add(audioListCurrentAdded, "current added audio");

		//PANEL FOR ALL SOUTH BUTTONS (PLAY, PAUSE, RW, FFD, MUTE, VOL SLIDER)
				JPanel bottomBtnPanel = new JPanel();
				bottomBtnPanel.setBounds(100,900,105,200);
				frame.getContentPane().add(bottomBtnPanel, BorderLayout.SOUTH);
				bottomBtnPanel.setBackground(Color.black);
				//PANEL FOR ADDED AUDIO AND VIDEO AT NORTH
				JPanel topMediaBtnPanel = new JPanel();
				topMediaBtnPanel.setBounds(200,1900,105,200);
				frame.getContentPane().add(topMediaBtnPanel, BorderLayout.NORTH);
				topMediaBtnPanel.setBackground(Color.black);
				bottomBtnPanel.setLayout(new BorderLayout(0, 0));

				
		//__________________________________________________________________________ VIDEO SLIDER INITIALIZED
		videoSlider = new JSlider();
		//System.out.println(videoSlider.getValue());
		/*videoSlider.addMouseListener(new MouseListener() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				if (!videoSliderStart){
					vsb = new videoSliderBar(mp.getLength(),true);
					vsb.execute();
					videoSliderStart = true;
				} else {
					videoSliderStart = false;
				}
			}


		});*/
		
		videoSlider.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent e) {
				//if (getMp() != null){
					
				//}
			}
		});
		videoSlider.setValue(0);
		bottomBtnPanel.add(videoSlider, BorderLayout.NORTH);

		playBtnPanel = new JPanel();
		bottomBtnPanel.add(playBtnPanel, BorderLayout.WEST);
		playBtnPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));


		//creates media player where video is played on
		//setMp(mpf.newEmbeddedMediaPlayer());
		//getMp().setVideoSurface(mpf.newVideoSurface(c));
		//mp.playMedia("big_buck_bunny_1_minute.avi"); // this is used so when testing we don't have to rechoose the video every time

		//__________________________________________________________________________ REWIND BUTTON
		rwdbutton = new JButton();
		playBtnPanel.add(rwdbutton);
		rwdbutton.addActionListener(new ActionListener() { //GLITCHY AF
			public void actionPerformed(ActionEvent e) {
				//Rewind.checkStatus();
			}
		});
		rwdbutton.setIcon(rwd_Icon);


		//__________________________________________________________________________ PLAY BUTTON
		playbutton = new JButton();
		playBtnPanel.add(playbutton);
		playbutton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//boolean once chosen a new video we have a boolean so that it 
				/*if (!getMp().isPlaying()){
					if (getMp() != null){ // checks video exists and mp is initialized correctly
						getMp().setRate((float) 1); // set normal rate (incase ffwding)
						Rewind.checkPlay();
					}
				} else { // if the video is playing
					if (getMp() != null){
						getMp().start();
						getMp().setRate((float) 1); // set normal rate (incase ffwding)
						Rewind.checkPlay();
					}
				}*/
			}
		});
		playbutton.setIcon(play_Icon);

		//__________________________________________________________________________ PAUSE BUTTON
		pausebutton = new JButton();
		playBtnPanel.add(pausebutton);
		pausebutton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//getMp().pause();
			}
		});
		pausebutton.setIcon(pause_Icon);

		//__________________________________________________________________________ FAST FORWARD BUTTON
		ffdbutton = new JButton();
		playBtnPanel.add(ffdbutton);
		ffdbutton.addActionListener(new ActionListener() { 
			@Override
			public void actionPerformed(ActionEvent e) {
				if (ffd){
					ffd = false;
					//getMp().setRate((float) 1);
				}else {
					ffd = true;
					//getMp().setRate((float) 10);
				}
			};
		});
		ffdbutton.setIcon(ffd_Icon);

		//__________________________________________________________________________ MUTE BUTTON
		mutebutton = new JButton();
		playBtnPanel.add(mutebutton);
		mutebutton.setIcon(mute_Icon);
		mutebutton.addActionListener(new ActionListener() {
			int sliderValue = 50;
			public void actionPerformed(ActionEvent e) {
				/*if (getMp().isMute()){
					mutebutton.setIcon(mute_Icon);
					volSlider.setValue(sliderValue);
				} else {
					mutebutton.setIcon(vol_Icon);
					sliderValue = getMp().getVolume();
					volSlider.setValue(0);
				}
				getMp().mute();*/
			}
		});
		
		//__________________________________________________________________________ VOLUME SLIDER
		volSlider = new JSlider();
		volSlider.addChangeListener(new ChangeListener() {
			public void stateChanged(ChangeEvent e) {
				//getMp().setVolume(volSlider.getValue());
				//mutebutton.setIcon(mute_Icon);
			}
		});
		playBtnPanel.add(volSlider);

		btnSeeAllAudio = new JButton("Save new video");
		bottomBtnPanel.add(btnSeeAllAudio, BorderLayout.EAST);
		btnSeeAllAudio.setFont(new Font("Tahoma", Font.BOLD, 16));

		sliderPanel = new JPanel();
		bottomBtnPanel.add(sliderPanel, BorderLayout.CENTER);
		
		//__________________________________________________________________________ VIDEO SELECT TO PLAY BUTTON
		videoSelectbtn = new JButton("ADD VIDEO");
		videoSelectbtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				/*MediaSelection ms = new MediaSelection(true);
				getMp().pause();
				ms.actionPerformed(e);*/
			}
		});
		topMediaBtnPanel.setLayout(new GridLayout(0, 2, 0, 0));
		topMediaBtnPanel.add(videoSelectbtn);

		mp3Selectbtn = new JButton("OPEN EDITED VIDEO PROJECT");
		mp3Selectbtn.setFont(new Font("Tahoma", Font.BOLD, 18));
		mp3Selectbtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		mp3Selectbtn.setBounds(503, 12, 500, 25);
		topMediaBtnPanel.add(mp3Selectbtn);
		
		//__________________________________________________________________________ AUDIO SELECT TO PLAY BUTTON
		/*mp3Selectbtn = new JButton("ADD AUDIO");
		mp3Selectbtn.addActionListener(new ActionListener() {
			//MediaSelection ms = new MediaSelection(false);
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		mp3Selectbtn.setBounds(503, 12, 500, 25);
		p2.add(mp3Selectbtn);*/
		
	}

	/**
	 * Set's video as the input String s from other classes
	 */
	public static void setVideoSource(String string){ video = string; }

	/**
	 * Set's audio as the input String s from other classes
	 */
	public static void setAudioSource(String s){ audio = s; }

	/**
	 * Changes the current video media being played
	 */
	public static void changeVideo(){ 
		/*getMp().playMedia(video);
		videoSlider.setMaximum((int) getMp().getLength());
		videoSlider.setValue(0);*/
	}

	/**
	 * returns the current video
	 */
	public static String getVideoSource(){ return video; }

	/**
	 * returns the current audio
	 */
	public static String getAudioSource(){ return audio; }

	public static boolean getRwd(){ return rwd; }

	public static void setRwd(boolean rw){ rwd = rw; }

	public static void setFastForward(boolean fwd){ ffd = fwd; }

	/*public static EmbeddedMediaPlayer getMp() {
		return mp;
	}

	public static void setMp(EmbeddedMediaPlayer mp) {
		Mainframe.mp = mp;
	}*/
}
